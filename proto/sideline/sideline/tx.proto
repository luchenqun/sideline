syntax = "proto3";
package sideline.sideline;

// this line is used by starport scaffolding # proto/tx/import

option go_package = "sideline/x/sideline/types";

// Msg defines the Msg service.
service Msg {
      rpc RegistEmployer(MsgRegistEmployer) returns (MsgRegistEmployerResponse);
  rpc RegistDeveloper(MsgRegistDeveloper) returns (MsgRegistDeveloperResponse);
  rpc CreateTask(MsgCreateTask) returns (MsgCreateTaskResponse);
  rpc DoTask(MsgDoTask) returns (MsgDoTaskResponse);
  rpc SubmitTask(MsgSubmitTask) returns (MsgSubmitTaskResponse);
  rpc UndoneTask(MsgUndoneTask) returns (MsgUndoneTaskResponse);
  rpc SuccessTask(MsgSuccessTask) returns (MsgSuccessTaskResponse);
  rpc FailTask(MsgFailTask) returns (MsgFailTaskResponse);
  rpc StartJudgeTask(MsgStartJudgeTask) returns (MsgStartJudgeTaskResponse);
  rpc CancelTask(MsgCancelTask) returns (MsgCancelTaskResponse);
  rpc JudgeTask(MsgJudgeTask) returns (MsgJudgeTaskResponse);
  rpc VoteTask(MsgVoteTask) returns (MsgVoteTaskResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgRegistEmployer {
  string creator = 1;
  string name = 2;
  string introduce = 3;
  string email = 4;
  string avatar = 5;
}

message MsgRegistEmployerResponse {
}

message MsgRegistDeveloper {
  string creator = 1;
  string name = 2;
  string introduce = 3;
  string email = 4;
  string avatar = 5;
  string education = 6;
  string major = 7;
  repeated string skills = 8;
}

message MsgRegistDeveloperResponse {
}

message MsgCreateTask {
  string creator = 1;
  string title = 2;
  string description = 3;
  string remuneration = 4;
  string deposit = 5;
  string collateral = 6;
  uint64 deadline = 7;
}

message MsgCreateTaskResponse {
  uint64 id = 1;
}

message MsgDoTask {
  string creator = 1;
  uint64 id = 2;
}

message MsgDoTaskResponse {
}

message MsgSubmitTask {
  string creator = 1;
  uint64 id = 2;
  string deliver = 3;
}

message MsgSubmitTaskResponse {
}

message MsgUndoneTask {
  string creator = 1;
  uint64 id = 2;
}

message MsgUndoneTaskResponse {
}

message MsgSuccessTask {
  string creator = 1;
  uint64 id = 2;
}

message MsgSuccessTaskResponse {
}

message MsgFailTask {
  string creator = 1;
  uint64 id = 2;
}

message MsgFailTaskResponse {
}

message MsgStartJudgeTask {
  string creator = 1;
  uint64 id = 2;
}

message MsgStartJudgeTaskResponse {
}

message MsgCancelTask {
  string creator = 1;
  uint64 id = 2;
}

message MsgCancelTaskResponse {
}

message MsgJudgeTask {
  string creator = 1;
  uint64 id = 2;
}

message MsgJudgeTaskResponse {
}

message MsgVoteTask {
  string creator = 1;
  uint64 id = 2;
  uint64 option = 3;
}

message MsgVoteTaskResponse {
}

// this line is used by starport scaffolding # proto/tx/message
