syntax = "proto3";
package sideline.sideline;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "sideline/sideline/params.proto";
import "sideline/sideline/employer.proto";
// this line is used by starport scaffolding # 1

option go_package = "sideline/x/sideline/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/sideline/sideline/params";
  }
  // Queries a Employer by index.
	rpc Employer(QueryGetEmployerRequest) returns (QueryGetEmployerResponse) {
		option (google.api.http).get = "/sideline/sideline/employer/{index}";
	}

	// Queries a list of Employer items.
	rpc EmployerAll(QueryAllEmployerRequest) returns (QueryAllEmployerResponse) {
		option (google.api.http).get = "/sideline/sideline/employer";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetEmployerRequest {
	  string index = 1;

}

message QueryGetEmployerResponse {
	Employer employer = 1 [(gogoproto.nullable) = false];
}

message QueryAllEmployerRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllEmployerResponse {
	repeated Employer employer = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
